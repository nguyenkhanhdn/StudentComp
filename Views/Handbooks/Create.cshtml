@model StudentComp.Models.Handbook

@{
    ViewBag.Title = "Create";
}

@section sectionTitle{
    <span>BÀI VIẾT</span>
}
@section contentPage{
    <span>Tạo bài viết mới</span>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <h3>Tạo bài viết mới</h3>
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Brief, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Brief, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Brief, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Cont, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextAreaFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })*@
                <input list="Subjects" name="Type" id="Type" class="form-control" />
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <br />
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}
<datalist id="Subjects">
    <option value="Toán">
    <option value="Ngữ văn">
    <option value="Vật lý">
    <option value="Hóa học">
    <option value="Địa lý">
    <option value="Sinh học">
    <option value="Lịch sử">
    <option value="Ngoại ngữ">
    <option value="Tin học">
    <option value="GDCD">
    <option value="Công nghệ">
    <option value="Mỹ thuật">
    <option value="Âm nhạc">
    <option value="Kỹ năng">
</datalist>
<div>
    @Html.ActionLink("Trở về danh sách", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/ckeditor/ckeditor.js"></script>
    <script src="~/ckfinder/ckfinder.js"></script>
    <script type="text/javascript">
        var editor = CKEDITOR.replace('Content');
        CKFinder.setupCKEditor(editor, '../ckfinder/');

    </script>
}
